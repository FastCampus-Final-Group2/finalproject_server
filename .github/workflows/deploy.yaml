name: CI/CD

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      

      - name: set yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yaml
        env:
          spring.datasource.url: ${{ secrets.MYSQL_URL }}
          spring.datasource.username: ${{ secrets.MYSQL_USERNAME }}
          spring.datasource.password: ${{ secrets.MYSQL_PASSWORD }}
          redis.host: ${{ secrets.REDIS_HOST }}
          redis.port: ${{ secrets.REDIS_PORT }}
          redis.password: ${{ secrets.REDIS_PASSWORD }}


      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test
        shell: bash

        # 멀티모듈 빌드
        # ./gradlew clean :module-api:buildNeeded --stacktrace --info --refresh-dependencies -x test

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_REGISTRY_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set environment variables for tags and labels
        run: |
          echo "TAGS=${{ steps.meta.outputs.tags }}" >> $GITHUB_ENV
          echo "LABELS=${{ steps.meta.outputs.labels }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ env.TAGS }}
          labels: ${{ env.LABELS }}

      - name: Execute Server Init Script
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.SERVER_HOST }}
          key: ${{ secrets.SERVER_HOST_SECRETKEY }}

          # 도커 작업
          script: |
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker run -d --name fc-final-container --restart unless-stopped --log-driver=syslog -p 8080:8080 -e SPRING_PROFILES_ACTIVE=prod ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            docker image prune -a -f
